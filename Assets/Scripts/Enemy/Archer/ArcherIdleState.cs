using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class ArcherIdleState : ArcherGroundedState
{
    public ArcherIdleState(Enemy enemyBase, EnemyStateMachine stateMachine, string animBoolName, Archer archerRef)
        : base(enemyBase, stateMachine, animBoolName, archerRef)
    {
    }

    public override void Enter()
    {
        base.Enter();
        DelayTime = 2f; 
        archer.SetVelocity(0, rb.velocity.y);
    }

    public override void Exit()
    {
        base.Exit();
    }

    public override void Update()
    {
        base.Update();
        var detection = archer.IsPlayerDetected();

        if (detection.collider != null)
        {
            stateMachine.ChangeState(archer.BattleState);
            return;
        }

        archer.SetVelocity(0, rb.velocity.y);

        if (DelayTime <= 0)
        {
            // Generated by ChatGPT, with some modifications for clarity and functionality.
            int randomDir = Random.value < 0.5f ? -1 : 1;
            if (archer.facingDirection != randomDir || !archer.IsGroundDetected())
                archer.Flip(); 
            stateMachine.ChangeState(archer.MoveState);
        }
    }
}
